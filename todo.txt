To-do:

1.	Change AS2 folder to file permissions 606

Tasks:

1. Create a All the Web-pages asked of you by the assignment.

2. Upon successful server-side validation, all the form data must be stored inside a JSON file (users.json). The file must be stored one level inside a2/data directory.
	• Possibly write AJAX code in jQuery for this.

3.	Add a separate login page OR login form in the header that allows all registered users to log in.
		The form will check for the validity of user credentials against the data stored in users.json file.

		User credentials are as follows: Username == email in registration form, Password = password field in registration form Upon successful validation and login, the following workflow must be implemented:
			• user will land on a brand-new page i.e. myFitness page.

		This page is only accessible to logged in users. The page must greet user with Welcome message.•myFitness page link will appear in sitemap as well-but if a non-loggedin user clicks on this link, they must be asked to log in.
		Optional implementation: upon successful registration, user may be auto logged in and redirected to myFitness page.

a) It would be a good idea to sketch/plan out the design of each web-page first before implementing all the code together.
-	List out what functions are needed for each feature.
-	Match design patterns in which you can implement DRY (Don't Repeat Yourself).
-	Structure your code heirarchy properly, and ensure that when a program is searching for a certain file, keep the file branching small (do not go past 2 branches).
-	Think in a data-oriented mindset. You are dealing with JSON files and Arrays. You'll be calling certain APIs and libraries/frameworks.

b) Create the web-pages. Design each web-page.
-	This way you know what feature a web-page should have, therefore external/inline PHP/JavaScript code which complements or implements the feature.

c) Be creative then be critically constructive.
-	Creatively write your code. Then get into a 'Defensive Programming' mindset (made up by Zed Shaw from Learn C the Hardway), and then develop your code in an Aspect-oriented program.
-	You may also have your code be Data-driven, having data determine the functionality of your code; having defaulting data structures or functions to combat errors in code.